<?xml version="1.0"?>
<project name="Hibernate using native api (hbm)" basedir="." default="start">

	<target name="start">
	<echo>
	Ant targets:
		ant clean
		ant build
		ant load
		ant build.test
		ant test.query
		
	
	</echo>
	
	</target>
	
	<target name="init">
		<property name="name" value="pim" />
		<property name="src.dir" location="${basedir}/src" />
		<property name="test.dir" location="${basedir}/test" />
		<property name="build.dir" location="${basedir}/classes" />

		<!--<property name="config.dir" location="${basedir}/src" />
		
		<property name="hibernate.dir" location="C:\hibernate-release-4.1.6.Final\hibernate-release-4.1.6.Final" /> -->
		<property name="junit.jar" location="${basedir}/lib/junit.jar" />
		<!--<property name="logging.jar" location="${basedir}/lib/slf4j-log4j12-1.6.1.jar" />-->

		<path id="project.classpath">
			<pathelement location="${build.dir}" />
			<pathelement location="${junit.jar}" />
			<!--<pathelement location="${logging.jar}" /> -->
			<fileset dir="${basedir}/lib">
				<include name="*.jar" />
			</fileset>
		</path>
	</target>

	<target name="clean" depends="init">
		<delete dir="${build.dir}" />
	</target>

	<target name="build" depends="clean">
		<mkdir dir="${build.dir}" />

		<javac destdir="${build.dir}" debug="true" deprecation="false" optimize="false" failonerror="true" includeantruntime="false">
			<src path="${src.dir}" />
			<classpath refid="project.classpath" />
		</javac>
		
	</target>

	<target name="build.test" depends="build">
		<javac destdir="${build.dir}" debug="true" deprecation="false" optimize="false" failonerror="true" includeantruntime="false">
			<src path="${test.dir}" />
			<classpath refid="project.classpath" />
		</javac>
	</target>

	<target name="test.query" depends="build.test">
		<junit printsummary='yes' fork='yes'>
			<classpath refid="project.classpath" />

			<formatter type="plain" />

			<test name="testCase.BigDataTest" haltonfailure="no" outfile="result">
				<formatter type="xml" />
			</test>

		</junit>
	</target>

	

	<target name="load" depends="build">
		<java fork="yes" classname="jdbcpart.BigData">
			<classpath refid="project.classpath" />
		</java>
	</target>

</project>
